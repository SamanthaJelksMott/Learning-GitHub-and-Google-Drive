/*	in coll18_production */

/*	Revision history:
		JDT 6/26/2023: Created query for use in basic FOIA directory info requests.
*/

DECLARE @TERM VARCHAR(6) = 'W22/23'
DECLARE @NCTERM VARCHAR(6) = 'N22/23' -- /* change this to NULL if non-credit students are excluded */
DECLARE @TERM_START DATETIME = (SELECT TERM_START_DATE FROM TERMS WHERE TERMS_ID = @TERM)
DECLARE @TERM_END DATETIME = (SELECT TERM_END_DATE FROM TERMS WHERE TERMS_ID = @TERM)

SELECT
	P.LAST_NAME [Last Name], COALESCE(P.PERSON_CHOSEN_FIRST_NAME,P.NICKNAME,P.FIRST_NAME) [First Name], ISNULL(P.SUFFIX,'') [Suffix]
	, CONVERT(DATE,P.BIRTH_DATE) [Birthdate]
	, (0+CONVERT(CHAR(8),GETDATE(),112)-CONVERT(CHAR(8),P.BIRTH_DATE,112))/10000 [Age]
	, ISNULL(A.ADDRESS_LINE1,'') [Address Line 1], ISNULL(A.ADDRESS_LINE2,'') [Address Line 2], ISNULL(A.CITY,'') [City], ISNULL(A.STATE,'') [State], ISNULL(A.ZIP,'') [ZIP Code]
	, CASE WHEN A.COUNTRY IN ('US','USA') THEN '' ELSE ISNULL(C.CTRY_DESC,'') END [Country]
	, ISNULL(H.PHONE1,'') [Phone]
	, ISNULL(SP.PROG,'') [Program Code], ISNULL(SP.TITLE,'') [Program Title]

FROM
	(
		SELECT DISTINCT C.STC_PERSON_ID
		FROM
			STUDENT_ACAD_CRED C
			JOIN STC_STATUSES S ON C.STUDENT_ACAD_CRED_ID=S.STUDENT_ACAD_CRED_ID AND S.POS=1
			JOIN TERMS T ON C.STC_TERM=T.TERMS_ID
		WHERE
			C.STC_PERSON_ID IS NOT NULL
			AND C.STC_TERM IS NOT NULL
			AND C.STC_ACAD_LEVEL IN ('C', 'N')
			AND S.STC_STATUS IN ('N', 'A') -- /* only active students at the time of the query's execution need to be included */
			AND (T.TERMS_ID = @TERM OR (T.TERMS_ID = @NCTERM AND C.STC_START_DATE BETWEEN @TERM_START AND @TERM_END))
	) X

	JOIN PERSON P ON X.STC_PERSON_ID=P.ID
	LEFT OUTER JOIN PERSON_ADDRESSES_VIEW A ON P.PREFERRED_ADDRESS=A.ADDRESS_ID AND P.ID=A.ID
	LEFT OUTER JOIN COUNTRIES C ON A.COUNTRY=C.COUNTRIES_ID
	LEFT OUTER JOIN
		(
			SELECT ID, MAX(CASE WHEN PRANK = 1 THEN PERSONAL_PHONE_NUMBER END) PHONE1
			FROM
				(
					SELECT ID, PERSONAL_PHONE_TYPE, PERSONAL_PHONE_NUMBER, ROW_NUMBER() OVER(PARTITION BY ID ORDER BY CASE PERSONAL_PHONE_TYPE WHEN 'HOME' THEN 1 WHEN 'CELL' THEN 2 END, POS) PRANK
					FROM PERPHONE
					WHERE PERSONAL_PHONE_TYPE NOT IN ('FAX', 'BUS') AND PERSONAL_PHONE_NUMBER IS NOT NULL
				) H1
			GROUP BY ID
		) H ON P.ID=H.ID
	LEFT OUTER JOIN
		(
			SELECT STPR_STUDENT, MAX(CASE WHEN PRANK = 1 THEN STPR_ACAD_PROGRAM END) PROG, MAX(CASE WHEN PRANK = 1 THEN ACPG_TITLE END) TITLE
			FROM
				(
					SELECT LEFT(P.STUDENT_PROGRAMS_ID,7) STPR_STUDENT, RIGHT(P.STUDENT_PROGRAMS_ID,LEN(P.STUDENT_PROGRAMS_ID)-8) STPR_ACAD_PROGRAM
						, ACPG_TITLE, ROW_NUMBER() OVER(PARTITION BY LEFT(P.STUDENT_PROGRAMS_ID,7)
							ORDER BY CASE WHEN D.STPR_START_DATE<=@TERM_END AND COALESCE(D.STPR_END_DATE,GETDATE())>=@TERM_START THEN 0 ELSE ABS(DATEDIFF(D,D.STPR_START_DATE,@TERM_START)) END
							, STPR_START_DATE, RIGHT(P.STUDENT_PROGRAMS_ID,LEN(P.STUDENT_PROGRAMS_ID)-8)
							) PRANK
					FROM STUDENT_PROGRAMS P
						JOIN STPR_DATES D ON P.STUDENT_PROGRAMS_ID=D.STUDENT_PROGRAMS_ID AND D.POS=1
						JOIN ACAD_PROGRAMS A ON RIGHT(P.STUDENT_PROGRAMS_ID,LEN(P.STUDENT_PROGRAMS_ID)-8)=A.ACAD_PROGRAMS_ID AND D.STPR_START_DATE BETWEEN A.ACPG_START_DATE AND COALESCE(A.ACPG_END_DATE,GETDATE())
					WHERE LEN(P.STUDENT_PROGRAMS_ID) > 1
				) R1
			GROUP BY STPR_STUDENT
		) SP ON P.ID=SP.STPR_STUDENT

WHERE
	(P.DIRECTORY_FLAG IS NULL OR P.DIRECTORY_FLAG <> 'N')
	AND (P.PRIVACY_FLAG IS NULL OR P.PRIVACY_FLAG NOT IN ('DU', 'L'))
	AND (0+CONVERT(CHAR(8),GETDATE(),112)-CONVERT(CHAR(8),P.BIRTH_DATE,112))/10000 >= 18

ORDER BY SP.TITLE, P.LAST_NAME, COALESCE(P.PERSON_CHOSEN_FIRST_NAME,P.NICKNAME,P.FIRST_NAME)
	